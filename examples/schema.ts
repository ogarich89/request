/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/users": {
    /** Get users */
    get: {
      parameters: {
        query: {
          page: number;
          per_page: number;
        };
      };
      responses: {
        /** @description Successfully */
        200: {
          content: {
            "application/json": {
                /** @example 1 */
                id: number;
                /** @example Roman */
                first_name: string;
                /** @example Ogarkov */
                last_name: string;
                /** @example ogarich89 */
                username: string;
                /** @example 0 */
                role?: number;
                /** @example false */
                subscribed?: boolean;
                /** @example 2023-02-28T06:09:01.499Z */
                created_at?: string;
                /** @example 2023-02-28T06:09:01.499Z */
                updated_at?: string;
                /** @example 18 */
                user_id?: number;
              }[];
          };
        };
      };
    };
    /** Create user */
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** @example Roman */
            first_name: string;
            /** @example Ogarkov */
            last_name: string;
            /** @example ogarich89 */
            username: string;
          };
        };
      };
      responses: {
        /** @description Successfully */
        200: {
          content: {
            "application/json": {
              /** @example 1 */
              id: number;
              /** @example Roman */
              first_name: string;
              /** @example Ogarkov */
              last_name: string;
              /** @example ogarich89 */
              username: string;
              /** @example 0 */
              role?: number;
              /** @example false */
              subscribed?: boolean;
              /** @example 2023-02-28T06:09:01.499Z */
              created_at?: string;
              /** @example 2023-02-28T06:09:01.499Z */
              updated_at?: string;
              /** @example 18 */
              user_id?: number;
            };
          };
        };
      };
    };
  };
  "/users/{id}": {
    /** Get user */
    get: {
      parameters: {
        path: {
          /** @example 2 */
          id: string;
        };
      };
      responses: {
        /** @description Successfully */
        200: {
          content: {
            "application/json": {
              /** @example 1 */
              id: number;
              /** @example Roman */
              first_name: string;
              /** @example Ogarkov */
              last_name: string;
              /** @example ogarich89 */
              username: string;
              /** @example 0 */
              role?: number;
              /** @example false */
              subscribed?: boolean;
              /** @example 2023-02-28T06:09:01.499Z */
              created_at?: string;
              /** @example 2023-02-28T06:09:01.499Z */
              updated_at?: string;
              /** @example 18 */
              user_id?: number;
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              /** @example 1 */
              id?: number;
            };
          };
        };
      };
    };
    /** Update user */
    put: {
      parameters: {
        path: {
          /** @example 7 */
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            /** @example Roman */
            first_name: string;
            /** @example Ogarkov */
            last_name: string;
            /** @example ogarich89 */
            username: string;
          };
        };
      };
      responses: {
        /** @description Successfully */
        200: {
          content: {
            "application/json": {
              /** @example 7 */
              id: number;
            };
          };
        };
      };
    };
    /** Delete user */
    delete: {
      parameters: {
        path: {
          /** @example 2 */
          id: string;
        };
      };
      responses: {
        /** @description Successfully */
        200: {
          content: {
            "application/json": {
              /** @example 7 */
              id: number;
            };
          };
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
